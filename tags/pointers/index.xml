<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pointers on #anooptube</title>
    <link>https://anooptube.in/tags/pointers/</link>
    <description>Recent content in pointers on #anooptube</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Mar 2023 19:23:16 +0530</lastBuildDate><atom:link href="https://anooptube.in/tags/pointers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>New and Delete Operators</title>
      <link>https://anooptube.in/blog/post16/</link>
      <pubDate>Wed, 29 Mar 2023 19:23:16 +0530</pubDate>
      
      <guid>https://anooptube.in/blog/post16/</guid>
      <description>C++ allows us to create variables at runtime. The variable can be created in Stack memory or Heap memory.
Memory Layout in C++ Stack Memory Functions are allocated stack memory every time they are called by the machine. Whenever a new local variable is declared, more stack memory is allocated to store the variable in that function.
Stacks grow downward when such allocations are made. All local variables of this function become invalid after the function returns, since the stack memory of this function is deallocated.</description>
    </item>
    
    <item>
      <title>Basics Of Pointers</title>
      <link>https://anooptube.in/blog/post15/</link>
      <pubDate>Sat, 18 Mar 2023 19:41:47 +0530</pubDate>
      
      <guid>https://anooptube.in/blog/post15/</guid>
      <description>A pointer is a special type of variable that can hold the memory address of an another variable.
Overview of C++ Pointers 1. Accessing address of a variable We can access the memory address of a variable by &amp;amp; symbol
int x = 10; &amp;amp;x // gives the memory address Example #include &amp;lt;iostream&amp;gt; int main() { int mark = 300; int age = 24; int salary = 17000; std::cout &amp;lt;&amp;lt; &amp;#34;Address of mark: &amp;#34;&amp;lt;&amp;lt; &amp;amp;mark &amp;lt;&amp;lt; std::endl; std::cout &amp;lt;&amp;lt; &amp;#34;Address of age: &amp;#34; &amp;lt;&amp;lt; &amp;amp;age &amp;lt;&amp;lt; std::endl; std::cout &amp;lt;&amp;lt; &amp;#34;Address of salary: &amp;#34; &amp;lt;&amp;lt; &amp;amp;salary &amp;lt;&amp;lt; std::endl; } 2.</description>
    </item>
    
  </channel>
</rss>
