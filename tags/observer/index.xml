<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>observer on #anooptube</title>
    <link>https://anooptube.in/tags/observer/</link>
    <description>Recent content in observer on #anooptube</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Aug 2025 09:35:43 +0530</lastBuildDate><atom:link href="https://anooptube.in/tags/observer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Observer Design Pattern</title>
      <link>https://anooptube.in/blog/post42/</link>
      <pubDate>Fri, 29 Aug 2025 09:35:43 +0530</pubDate>
      
      <guid>https://anooptube.in/blog/post42/</guid>
      <description>The Observer Design Pattern is one of the most widely used behavioral patterns in software design. It defines a one-to-many dependency between objects, so that when one object (called the Subject) changes its state, all of its dependents (called Observers) are notified automatically.
This pattern is extremely useful when you want to build loosely coupled systems where multiple parts of the application need to react to changes without being tightly bound together.</description>
    </item>
    
  </channel>
</rss>
