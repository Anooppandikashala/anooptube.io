<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>new on #anooptube</title>
    <link>https://anooptube.in/tags/new/</link>
    <description>Recent content in new on #anooptube</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Apr 2023 19:50:04 +0530</lastBuildDate><atom:link href="https://anooptube.in/tags/new/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arrow Operator</title>
      <link>https://anooptube.in/blog/post17/</link>
      <pubDate>Sat, 01 Apr 2023 19:50:04 +0530</pubDate>
      
      <guid>https://anooptube.in/blog/post17/</guid>
      <description>We can create a pointer variable for Complex data types such as struct and class. Also we can create a pointer for class and struct in stack and heap As similar as primitive data types.
Syntax className *pointerName; pointerName = &amp;amp;classObjectName;  
 (adsbygoogle = window.adsbygoogle || []).push({});  Example struct Student { int mark; std::string name; }; int main(int argc, char const *argv[]) { Student s; s.mark = 10; s.</description>
    </item>
    
    <item>
      <title>New and Delete Operators</title>
      <link>https://anooptube.in/blog/post16/</link>
      <pubDate>Wed, 29 Mar 2023 19:23:16 +0530</pubDate>
      
      <guid>https://anooptube.in/blog/post16/</guid>
      <description>C++ allows us to create variables at runtime. The variable can be created in Stack memory or Heap memory.
Memory Layout in C++ Stack Memory Functions are allocated stack memory every time they are called by the machine. Whenever a new local variable is declared, more stack memory is allocated to store the variable in that function.
Stacks grow downward when such allocations are made. All local variables of this function become invalid after the function returns, since the stack memory of this function is deallocated.</description>
    </item>
    
  </channel>
</rss>
